# -*- coding: utf-8 -*-
"""Covid-Detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FTqh9o66VwXHp9n-RKs-9POI30YqHDYn

**Importing Necessary Libraries**
"""

import numpy as np
import matplotlib.pyplot as plt
import keras
from keras.layers import Dense,Conv2D,MaxPool2D,Dropout,Flatten
from keras.models import Sequential
from keras.preprocessing import image

"""**Data Augmentation**"""

train_datagen=image.ImageDataGenerator(rescale=1/255,horizontal_flip=True,zoom_range=0.2,shear_range=0.2,rotation_range=40,width_shift_range=0.2,height_shift_range=0.2,fill_mode='nearest')
test_datagen=image.ImageDataGenerator(rescale=1/225)

"""**Data Preprocessing**"""

train_data=train_datagen.flow_from_directory('/content/drive/MyDrive/Covid-Detection/Train',target_size=(224,224),batch_size=16,class_mode='binary')
test_data=test_datagen.flow_from_directory('/content/drive/MyDrive/Covid-Detection/Val',target_size=(224,224),batch_size=16,class_mode='binary')

train_data.class_indices

test_data.class_indices

"""**CNN Model**"""

model=Sequential()
model.add(Conv2D(filters=32,kernel_size=(3,3),activation='relu',input_shape=(224,224,3)))
model.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
model.add(Dropout(0.5))

model.add(Conv2D(filters=32,kernel_size=(3,3),activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
model.add(Dropout(0.35))

model.add(Conv2D(filters=36,kernel_size=(3,3),activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
model.add(Dropout(0.35))

model.add(Flatten())
model.add(Dense(units=64,activation='relu'))
model.add(Dropout(0.6))
model.add(Dense(units=1,activation='sigmoid'))

model.compile(optimizer='Adam',loss=keras.losses.binary_crossentropy,metrics='accuracy')
model.summary()

model_history=model.fit_generator(train_data,steps_per_epoch=9,epochs=10,validation_data=test_data,validation_steps=2)

model.metrics_names

print(model_history.history.keys())
plt.plot(model_history.history['accuracy'],label='acc')
plt.plot(model_history.history['val_accuracy'],label='val-acc')
plt.title('Model Accuracy')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.show()

plt.plot(model_history.history['loss'],label='loss')
plt.plot(model_history.history['val_loss'],label='Val loss')
plt.title('Model Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.show()

model.evaluate_generator(train_data)

model.evaluate_generator(test_data)

path="/content/drive/MyDrive/Covid-Detection/Val/Normal/NORMAL2-IM-0652-0001.jpeg"
img=image.load_img(path,target_size=(224,224))
img=image.img_to_array(img)/225
img=np.array([img])
img.shape

model.predict_classes(img)

import os
y_actual,y_test=[],[]
for i in os.listdir("/content/drive/MyDrive/Covid-Detection/Val/Normal"):
    img=image.load_img("/content/drive/MyDrive/Covid-Detection/Val/Normal/"+i,target_size=(224,224))
    img=image.img_to_array(img)
    img=np.expand_dims(img,axis=0)
    pred=model.predict_classes(img)
    y_test.append(pred[0,0])
    y_actual.append(1)

for i in os.listdir("/content/drive/MyDrive/Covid-Detection/Val/Covid"):
    img=image.load_img("/content/drive/MyDrive/Covid-Detection/Val/Covid/"+i,target_size=(224,224))
    img=image.img_to_array(img)
    img=np.expand_dims(img,axis=0)
    pred=model.predict_classes(img)
    y_test.append(pred[0,0])
    y_actual.append(0)

y_actual=np.array(y_actual)
y_test=np.array(y_test)

from sklearn.metrics import confusion_matrix,accuracy_score,classification_report
import seaborn as sns
cn=confusion_matrix(y_actual,y_test)
print(cn)

ac=accuracy_score(y_actual,y_test)
print(ac)

cr=classification_report(y_actual,y_test)

sns.heatmap(cn,cmap="plasma",annot=True) #0: Covid ; 1: Normal

"""## **Hyperparameter Tuning**"""

def build_model(hp):  
  model = keras.Sequential([
    keras.layers.Conv2D(
        filters=hp.Int('conv_1_filter', min_value=32, max_value=128, step=16),
        kernel_size=hp.Choice('conv_1_kernel', values = [3,5]),
        activation='relu',
        input_shape=(28,28,1)
    ),
    keras.layers.Conv2D(
        filters=hp.Int('conv_2_filter', min_value=32, max_value=64, step=16),
        kernel_size=hp.Choice('conv_2_kernel', values = [3,5]),
        activation='relu'
    ),
    keras.layers.Flatten(),
    keras.layers.Dense(
        units=hp.Int('dense_1_units', min_value=32, max_value=128, step=16),
        activation='relu'
    ),
    keras.layers.Dense(10, activation='softmax')
  ])
  
  model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2, 1e-3])),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
  
  return model

pip install keras-tuner

from kerastuner import RandomSearch
from kerastuner.engine.hyperparameters import HyperParameters

tuner_search=RandomSearch(build_model,
                          objective='val_accuracy',
                          max_trials=5,directory='output',project_name="Covid Detection")